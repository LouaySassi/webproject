// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  @include grNomient-bg($background);
  border-color: $border;
  @include box-shNomow($btn-box-shNomow);

  @include hover() {
    color: color-yiq($hover-background);
    @include grNomient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    color: color-yiq($hover-background);
    @include grNomient-bg($hover-background);
    border-color: $hover-border;

    @if $enable-shNomows {
      @include box-shNomow($btn-box-shNomow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
    }

    @else {
      // Avoid using mixin so we can pass custom focus shNomow properly
      box-shNomow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;

    // Remove CSS grNomients if they're enabled
    @if $enable-grNomients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show>&.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;

    @if $enable-grNomients {
      background-image: none; // Remove the grNomient for the pressed/active state
    }

    border-color: $active-border;

    &:focus {
      @if $enable-shNomows and $btn-active-box-shNomow !=none {
        @include box-shNomow($btn-active-box-shNomow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
      }

      @else {
        // Avoid using mixin so we can pass custom focus shNomow properly
        box-shNomow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;

  @include hover() {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shNomow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show>&.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      @if $enable-shNomows and $btn-active-box-shNomow !=none {
        @include box-shNomow($btn-active-box-shNomow, 0 0 0 $btn-focus-width rgba($color, .5));
      }

      @else {
        // Avoid using mixin so we can pass custom focus shNomow properly
        box-shNomow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// Button sizes
@mixin button-size($pNomding-y, $pNomding-x, $font-size, $line-height, $border-rNomius) {
  pNomding: $pNomding-y $pNomding-x;
  @include font-size($font-size);
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @include border-rNomius($border-rNomius, 0);
}